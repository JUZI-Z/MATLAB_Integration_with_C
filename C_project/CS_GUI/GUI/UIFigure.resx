<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAIABoBAAAJgAAACAgAAAAACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAA////Af///wH///8B////Af///wH///8BPL/5DTu/+Bk1tfUF////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BNK/1Azy693k8uvjZO6b2ZzCE
        6gf///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////ATVy4Rs6j+7NO5Pv/zyK
        8e88f/FjNXnqB////wH///8B////ATpNvAM8SLsD////Af///wH///8B////AQgSbwMgLp9lLEe89TRe
        1v84bOX/O3nv4TyB8EsugfQD////ASw/wgM7QcQzNzzBJf///wH///8B0ZM+D82RRkuFXUJZHBpw1xwi
        jf8nNqr/MFDK/zht5v88gu/VO4rxSzts5Rc4QtFPMDfImy0xvxnJoToD3KFDI9meQKHSlkT1u4RF+Vk+
        R/8ZGG7/HSKO/yk6r/81X9r/O4Dt/zyK8e05aerPMj7R7S4zw3cnK7YF3aRPNd6lTMfZoET90pg//8eN
        Sv+kdEj/PCpO/xcZe/8iLJz/MlXO/zt/6/87h+7/Nlzi/zA5yecsMb81////AdqhUh/ao1J33KNLydid
        QvPJj0n9mm9P/1M5Qv8fGWD/HCKM/y5Lwv87f+r/O4Tt/zRP2v8vNsWxLDK/Df///wH///8ByJ5JA9ug
        TBnZnkJVs39Ht1A0RPsxHkT/OCZI/xkbev8qQrb/OoPq/zqC7P8yRtT5LjTDaxcXtgP///8B////Af//
        /wH///8B////AXZRNBeRYi6xd08y+Vs9O/8lHmH/Jjmq/zmK6v85fur/MT/O3ywywS3///8B////Af//
        /wH///8B////Af///wH///8ByIstIapzJYeVZCTjTzdF/yIxmv84luj/N3nm/zA6yq0sLr8P////Af//
        /wH///8B////Af///wH///8B////Af///wGLZjwFsHcdS4tdK98oLoH/N6Lh/zZx4PkuNsZpKSm7A///
        /wH///8B////Af///wH///8B////Af///wH///8B////AbB6KAWncCRtQzpk9Tab1v80ZdnbLDPCKf//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8Bt30nEWlQT7c1dMH7MlTSjSUn
        uQn///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wGDXkU5Oj2Ujyo2
        vSP///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BkFI/A0Ut
        aQf///8B////Af///wH///8B////AQAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAA////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wE8u/cJPMD5KzzB+Ts7vPcnN7P1DyO+9QP///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BMsv/Azq69Sk8v/iZPMH50Ty7+KU6sfZZNab1Gw+K0AP///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wE0rPQLPLb3UTy499E8uff7PbT48T2o9787mfJpNoXsGf///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////ATiU8x88n/OLPab17Tyj8v88nvL/PZf0+TyO8888hPBhOH3sFRh4
        8gP///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wEvUMgJNWfcRzh45sE5guv7OoXs/zqE7f87gu7/PIHx+z1+
        88E8e+9VOHjpEzZ+7AP///8B////Af///wH///8B////Af///wH///8BOk29BT5NvAk0OLgD////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////AR4xoBkpQLV9L1DH4zNe1P02Z97/N23k/zlw
        6P86dev/PHrw8T198ak8f/BHN4DtD////wH///8B////Af///wH///8B////AURIwAlBR8QlPkXCKzI1
        vg////8B////Af///wH///8B////Af///wH///8B////Af///wEJEW0JFh6JRR8nl7kkMaT3Kj+z/y9M
        xf8yV9L/NmHc/zdp5P85dOz9PHzw5zyB8Zk7g+87LYH1C////wH///8B////Af///wEsP8MJOj/GNTk+
        xGk2O8FLLzG+Ef///wH///8B////Af///wH///8B0ItFA8uLRQ/GikQXqnM5ETAlWS8VF3aTGBuE6R0i
        jv0iK5v/KDes/yxEu/8xUcv/NF3a/zhr5v86d+z9PIDu4TyF8I06iPMzLormB////wH///8BSVDZCTY/
        yjUzOcmNMDbFlS0xvz0qK7kH////Af///wH///8B////AdqTMgnPkz8x0ZRGdcuQR5O8hD6Bb0w/pyof
        WucXFnD9Fxt//xogi/8hKZn/JjSo/ytCuf8wUMv/NWHd/zlw6f87fu39PIfw5zyM8qE7iPBNOXrnKz5g
        4i09TNhXNT3PqzA3ytEuNMZ7LjG/HzAwsAP///8B////AeeiRQPhpEAP2Jw+Q9abQJ3UmETjz5NI98aN
        R+2hcD33XD5C/yYcWP8WF2//Fxt//xwhjf8hKpr/Jzer/y1Gv/8zWdX/OGvl/zt77P88h+//PI3y8TuJ
        8sU6ee6lOl/lqTZI2c0xOc7xLjTGxS0ywFEnLLgN////Af///wHMoj0F26JGHdugQ1vboUG12Z5A79SY
        QP/QlEX/ypBL/7yFR/+TZj7/TzZE/yAYW/8VFnL/GByD/x0jkP8kL6D/Kj60/zJSzf83Z+H/Onnq/zyG
        7f88jPD/O4bx/Tp17/c3WuX5MkPW/S83yfUuM8ObLDC9LyoqtAX///8B36VLB9qkSy3epUp73KNGzdyi
        RPfXnUD/05k+/9CVQf/LkEj/wYlN/7B9SP+DWj//PypI/xkVYf8WGHn/Gh+I/yAol/8nN6r/MEzF/zZj
        3f86d+r/PIbt/zyM7v87g+7/OW7q/zVS3v8xPtD/LjXF4y0ywW8qLLwX////Af///wHaoE4b3qVQgeGo
        UNvepkz52qFI/9efQ//UnD//0Zc//8yRRv/Cik3/t4RQ/6R1Sv9sS0H/Kx5P/xYUbP8XG3//HSOP/yQv
        of8tRr7/NV/Z/zp26P88h+3/PIzu/zqA7f84Z+b/M0vY/zA6y/0uNMO/LDK+RSUltwn///8B////Adec
        UhXco1Nd26RTm9ykUcndpE3n2qJH99ifQv3UmUD/zpNF/8OLTf+1g1H/oHNR/3pVRP9FL0H/HRZa/xYX
        dP8aHob/ISmZ/ys/tf8zW9X/OXXn/zyI7v88jO//On3s/zdf4/8yRNT/LzfI8y40wpEtM8AhADPMA///
        /wH///8B////AdKYUwvSnVMn16NST9ujT4fcokq726BE29icQPHRlUX7wYpM/6N1Tv9xT03/STFG/0Uu
        Pf8uIEr/GRVm/xgafv8eJZL/KDqu/zJX0P85deb/PIru/zyO7/86eev/Nlng/zFA0f8vNsfdLjTBZS8v
        vA////8B////Af///wH///8B////Af///wHNoE4H2KFQHdygSj/aoERz2ZxBpdKWRtGvfEj1c09H/z0n
        R/8lF0b/NyNA/0AqQP8jGlf/Fxhz/xsgiv8mNKf/MVTM/zl25v87ju//O5Dv/zl16v80U9z/MT3O+y81
        xbstM8A/Ghq0B////wH///8B////Af///wH///8B////Af///wH///8B25lMBduhQxHankQtyZFMYYde
        Q7dSNUHzPCVD/zMfRP82IUT/SC8//zQkSv8aF2f/GByC/yMvoP8wUcf/OHfl/zuS7/86kvD/OXHo/zNO
        2f8vOsztLTPDkywvviH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Ad+j
        SwOGaEQHaUc4R3hQM7l4UDPzZkQ3/VE1Pv9TNj7/SjFB/yYdWP8YGXf/ICqY/y5Nwv84eeP/O5fw/zuT
        8P83a+b/MkfV/S83yNUtM8JlLC+7D////wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wGueR8PuX8mW7d8KL2kbifvhlks+25JNP9iQjn/OylK/xsZa/8dJZD/LEm9/zd7
        4v87n/H/OpXw/zZl4/8yQ9L3LzbGsywxwD8dILcF////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Ad+fLwPWmC8XyYsrW7h9JaembyHVkmEl84NXLP1aPTz/Jh5d/xsg
        hv8qRbb/Nn7g/zqn8f86l+//Nl/g/zE/z+svNcWNLjDAJSsrvQP///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Ab+PLwOtezURnmwzNaFuJmmkbx+zoWsf6YBV
        Lf08K03/HB17/yhAr/81g97/ObHx/zmY7v81WNz9MDvK1y4zwmcoKb8T////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wFnTE8DlGw4Dad0
        I0OydhujoWsh6V9BPf0iH2z/JTum/zSH2f86uu7/OZfr/zRR2PkwOcm1LTLBQSkpvAf///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BrncgB7h8HT21eh2nhVou7TQnWv8jNpj/NIjS/zy+6v84j+f/MknU6y81x4crMb4jKyu4A///
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8BsnsnD7l8H1ecaCfBTzhL+Sczif8yhMv/O7rn/ziF5P8wRNDPLTPEWycv
        vg////8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wGpcRwDtHkeHapzJXlqST7hMTV4/TB9wf86r+T/Nnff+TA/
        zaMrM8E1Iyy0B////wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wGtcyIFtn4nM4ZbN69FPmfzMXCz/ziZ
        4P81aNrlMDrJbScqvRf///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wG9fykLo3EzZV9L
        V9M3WZ/5M2/S9TJU0q0tMcEzHh6tB////wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wG5gC4jdFVMh0FChs0vQre7LT3DXSoquQ////8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////AcKGIAd/V0UxSThvYS4qllEjJqwbAAC+A////wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AYxQQAdRN10PNSF4CxYLggP///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>